apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: osp-machineset-template
objects:
  - apiVersion: machine.openshift.io/v1beta1
    kind: MachineSet
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: ${CLUSTERID}
        machine.openshift.io/cluster-api-machine-role: worker
        machine.openshift.io/cluster-api-machine-type: worker
      name: ${NAME}
      namespace: ${NAMESPACE}
    spec:
      replicas: ${{REPLICAS}}
      selector:
        matchLabels:
          machine.openshift.io/cluster-api-cluster: ${CLUSTERID}
          machine.openshift.io/cluster-api-machineset: ${NAME}
      template:
        metadata:
          labels:
            machine.openshift.io/cluster-api-cluster: ${CLUSTERID}
            machine.openshift.io/cluster-api-machine-role: worker
            machine.openshift.io/cluster-api-machine-type: worker
            machine.openshift.io/cluster-api-machineset: ${NAME}
        spec:
          metadata: {}
          taints:
            - effect: "NoSchedule"
              key: "mapi"
              value: "mapi_test"
          providerSpec:
            value:
              apiVersion: openstackproviderconfig.openshift.io/v1alpha1
              cloudName: openstack
              cloudsSecret:
                name: openstack-cloud-credentials
                namespace: openshift-machine-api
              flavor: m4.xlarge
              image: ${CLUSTERID}-rhcos
              kind: OpenstackProviderSpec
              metadata:
                creationTimestamp: null
              networks:
                - filter: {}
                  subnets:
                    - filter:
                        name: ${CLUSTERID}-nodes
                        tags: openshiftClusterID=${CLUSTERID}
              securityGroups:
                - filter: {}
                  name: ${CLUSTERID}-worker
              serverMetadata:
                Name: ${CLUSTERID}-worker
                openshiftClusterID: ${CLUSTERID}
              tags:
                - openshiftClusterID=${CLUSTERID}
              trunk: true
              userDataSecret:
                name: worker-user-data
parameters:
  - name: NAME
  - name: NAMESPACE
  - name: CLUSTERID
  - name: REPLICAS
