kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: external-insecure-elasticsearch
objects:
- kind: ConfigMap
  apiVersion: v1
  data:
    elasticsearch.yml: |
      node.name:  elasticsearch-server
      cluster.name: elasticsearch-server
      discovery.zen.minimum_master_nodes: 1
      network.host: 0.0.0.0
      http.port: 9200
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.authc.api_key.enabled: false
      xpack.monitoring.enabled : false
      xpack.license.self_generated.type: basic
      xpack.security.transport.ssl.enabled: false
      xpack.security.http.ssl.enabled: false
  metadata:
    name: elasticsearch-server
    namespace: ${NAMESPACE}

- kind: Deployment
  apiVersion: apps/v1
  metadata:
    labels:
      app: elasticsearch-server
    name: elasticsearch-server
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch-server
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Recreate
    template:
      metadata:
        labels:
          app: elasticsearch-server
      spec:
        containers:
        - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.4
          imagePullPolicy: IfNotPresent
          name: elasticsearch-server
          ports:
          - containerPort: 9300
            protocol: TCP
          - containerPort: 9200
            protocol: TCP
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            subPath: elasticsearch.yml
            name: elasticsearch-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        volumes:
        - configMap:
            defaultMode: 420
            name: elasticsearch-server
          name: elasticsearch-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always

- kind: Service
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      app: elasticsearch-server
    name: elasticsearch-server
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: port-1
      port: 9300
      protocol: TCP
      targetPort: 9300
    - name: port-2
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: elasticsearch-server
  status:
    loadBalancer: {}

parameters:
  - name: NAMESPACE
    value: "openshift-logging"
