apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: FlowCollector-template
objects:
  - apiVersion: flows.netobserv.io/v1alpha1
    kind: FlowCollector
    metadata:
      name: cluster
    spec:
      namespace: "${NAMESPACE}"
      agent: ebpf
      ebpf:
        image: "${EBPF_IMAGE}"
        imagePullPolicy: IfNotPresent
        sampling: 0
        cacheActiveTimeout: 5s
        cacheMaxFlows: 1000
        interfaces: []
        excludeInterfaces: ["lo"]
        logLevel: info
        privileged: false
      flowlogsPipeline:
        kind: "${KIND}"
        port: 2055
        image: "${FLOWLOGSPIPELINE_IMAGE}"
        imagePullPolicy: IfNotPresent
        logLevel: trace
        enableKubeProbes: true
        healthPort: 8080
        prometheusPort: 9102
        ignoreMetrics: []
        dropUnusedFields: true
      kafka:
        enable: false
        address: "kafka-cluster-kafka-bootstrap.network-observability"
        topic: "network-flows"
        tls:
          enable: false
          caCert:
            type: secret
            name: kafka-cluster-cluster-ca-cert
            certFile: ca.crt
          userCert:
            type: secret
            name: flp-kafka
            certFile: user.crt
            certKey: user.key
      loki:
        url: 'http://loki.default.svc.cluster.local:3100/'
        batchWait: 1s
        batchSize: 102400
        minBackoff: 1s
        maxBackoff: 300s
        maxRetries: 10
        staticLabels:
          app: netobserv-flowcollector
        tls:
          enable: false
          caCert:
            type: configmap
            name: openshift-service-ca.crt
            certFile: service-ca.crt
      consolePlugin:
        image: "${CONSOLEPLUGIN_IMAGE}"
        imagePullPolicy: IfNotPresent
        port: 9001
        logLevel: info
        portNaming:
          enable: true
          portNames:
            "3100": loki
      clusterNetworkOperator:
        namespace: "openshift-network-operator"
      ovnKubernetes:
        namespace: "ovn-kubernetes"
        daemonSetName: "ovnkube-node"
        containerName: "ovnkube-node"
parameters:
  - name: NAMESPACE
    description: "namespace where you want flowlogsPipeline and consoleplugin pods to be deployed"
    value: "network-observability"
  - name: KIND
    value: "DaemonSet"
    required: true
  - name: FLOWLOGSPIPELINE_IMAGE
    value: 'quay.io/netobserv/flowlogs-pipeline:main'
    required: true
  - name: CONSOLEPLUGIN_IMAGE
    value: 'quay.io/netobserv/network-observability-console-plugin:main'
    required: true
  - name: EBPF_IMAGE
    value: 'quay.io/netobserv/netobserv-ebpf-agent:main'
    required: true
