apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: FlowCollector-template
objects:
  - apiVersion: flows.netobserv.io/v1alpha1
    kind: FlowCollector
    metadata:
      name: cluster
    spec:
      namespace: "${NAMESPACE}"
      deploymentModel: "${DEPLOYMENT_MODEL}"
      agent:
        type: EBPF
        ipfix:
          cacheActiveTimeout: 20s
          cacheMaxFlows: 400
          sampling: 400
          clusterNetworkOperator:
            namespace: openshift-network-operator
          ovnKubernetes:
            namespace: ovn-kubernetes
            daemonSetName: ovnkube-node
            containerName: ovnkube-node
        ebpf:
          imagePullPolicy: IfNotPresent
          sampling: 1
          cacheActiveTimeout: 5s
          cacheMaxFlows: 100000
          interfaces: [ ]
          excludeInterfaces: ["lo"]
          logLevel: info
          privileged: false
          resources:
            requests:
              memory: 50Mi
              cpu: 100m
            limits:
              memory: 800Mi
          kafkaBatchSize: 10485760
      processor:
        port: 2055
        imagePullPolicy: IfNotPresent
        logLevel: trace
        enableKubeProbes: true
        healthPort: 8080
        profilePort: 6060
        metrics:
          server:
            port: 9102
            tls:
              type: "${METRIC_SERVER_TLS_TYPE}"
          ignoreTags:
            - egress
            - packets
        dropUnusedFields: true
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
          limits:
            memory: 300Mi
        kafkaConsumerReplicas: 3
        kafkaConsumerAutoscaler: null
        kafkaConsumerQueueCapacity: 1000
        kafkaConsumerBatchSize: 10485760
      kafka:
        address: "${KAFKA_ADDRESS}"
        topic: network-flows
        tls:
          enable: false
          caCert:
            type: secret
            name: kafka-cluster-cluster-ca-cert
            certFile: ca.crt
          userCert:
            type: secret
            name: flp-kafka
            certFile: user.crt
            certKey: user.key
      loki:
        authToken: "${LOKI_AUTH_TOKEN}"
        url: "${LOKI_URL}"
        tls:
          enable: "${{LOKI_TLS_ENABLE}}"
          caCert:
            type: configmap
            name: "${LOKI_CERT_NAME}"
            certFile: service-ca.crt
          insecureSkipVerify: false
        batchWait: 1s
        batchSize: 10485760
        minBackoff: 1s
        maxBackoff: 5s
        maxRetries: 2
        staticLabels:
          app: netobserv-flowcollector
      consolePlugin:
        register: true
        imagePullPolicy: IfNotPresent
        port: 9001
        logLevel: info
        autoscaler:
          status: DISABLED
          minReplicas: 1
          maxReplicas: 3
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
              averageUtilization: 50
        portNaming:
          enable: true
          portNames:
            "3100": loki
        quickFilters:
        - name: Applications
          filter:
            src_namespace!: 'openshift-,netobserv'
            dst_namespace!: 'openshift-,netobserv'
          default: true
        - name: Infrastructure
          filter:
            src_namespace: 'openshift-,netobserv'
            dst_namespace: 'openshift-,netobserv'
        - name: Pods network
          filter:
            src_kind: 'Pod'
            dst_kind: 'Pod'
          default: true
        - name: Services network
          filter:
            dst_kind: 'Service'
      exporters: []
parameters:
  - name: NAMESPACE
    description: "namespace where you want flowlogsPipeline and consoleplugin pods to be deployed"
    value: "netobserv"
  - name: METRIC_SERVER_TLS_TYPE
    value: "DISABLED"
  - name: LOKI_URL
    value: 'http://loki.netobserv.svc:3100/'
  - name: DEPLOYMENT_MODEL
    value: "DIRECT"
  - name: LOKI_AUTH_TOKEN
    value: "DISABLED"
  - name: LOKI_TLS_ENABLE
    value: "false"
  - name: LOKI_CERT_NAME
    value: "lokistack-gateway-ca-bundle"
  - name: KAFKA_ADDRESS
    value: "kafka-cluster-kafka-bootstrap.netobserv"
