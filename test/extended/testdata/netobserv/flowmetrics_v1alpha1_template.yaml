apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: netobserv-flowmetrics
objects:
- apiVersion: flows.netobserv.io/v1alpha1
  kind: FlowMetric
  metadata:
    name: port-metrics
    namespace: ${Namespace}
  spec:
    charts:
      - dashboardName: Custom
        queries:
          - legend: '{{DstK8S_Namespace}} / {{DstPort}}'
            promQL: 'sum(rate($METRIC[2m])) by (DstK8S_Namespace, DstPort)'
            top: 7
        title: Traffic across servie ports
        type: StackArea
    direction: Egress
    filters:
    - field: DstPort
      matchType: Presence
      value: "\\d+"
    labels:
    - DstPort
    - DstK8S_Namespace
    metricName: service_ports_total_bytes
    type: Counter
    valueField: Bytes
- apiVersion: flows.netobserv.io/v1alpha1
  kind: FlowMetric
  metadata:
    name: flowmetric-cluster-external-egress-rtt
    namespace: ${Namespace}
  spec:
    metricName: cluster_external_egress_rtt_seconds
    type: Histogram
    valueField: TimeFlowRttNs
    direction: Egress
    labels: [SrcK8S_HostName,SrcK8S_Namespace,SrcK8S_OwnerName,SrcK8S_OwnerType]
    filters:
    - field: DstSubnetLabel
      matchType: Absence
    - field: TimeFlowRttNs
      matchType: Presence
    divider: "1000000000"
    charts:
    - dashboardName: Main
      title: External egress TCP latency
      unit: seconds
      type: SingleStat
      queries:
      - promQL: "histogram_quantile(0.99, sum(rate($METRIC_bucket[2m])) by (le)) > 0"
        legend: "p99"
    - dashboardName: Main
      sectionName: External
      title: "Top external egress sRTT per workload, p50 (ms)"
      unit: seconds
      type: Line
      queries:
      - promQL: "histogram_quantile(0.5, sum(rate($METRIC_bucket{SrcK8S_Namespace!=\"\"}[2m])) by (le,SrcK8S_Namespace,SrcK8S_OwnerName))*1000 > 0"
        legend: "{{SrcK8S_Namespace}} / {{SrcK8S_OwnerName}}"
    - dashboardName: Main
      sectionName: External
      title: "Top external egress sRTT per workload, p99 (ms)"
      unit: seconds
      type: Line
      queries:
      - promQL: "histogram_quantile(0.99, sum(rate($METRIC_bucket{SrcK8S_Namespace!=\"\"}[2m])) by (le,SrcK8S_Namespace,SrcK8S_OwnerName))*1000 > 0"
        legend: "{{SrcK8S_Namespace}} / {{SrcK8S_OwnerName}}"
parameters:
- name: Namespace
  value: netobserv
