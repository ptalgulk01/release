#!/bin/bash
#config env for cluster

WORKDIRBASE=$1
BUILD_NUM_FOR_CONF=$2
CONTENT_FOR_CONF=$3
if [ "${BUILD_NUM_FOR_CONF}" == "null" ]; then
  BUILD_NUM_FOR_CONF=""
else
  BUILD_NUM_FOR_CONF=${BUILD_NUM_FOR_CONF:4}
fi

FLEXYURLBASE="https://mastern-jenkins-csb-openshift-qe.apps.ocp4.prod.psi.redhat.com/job/ocp-common/job/Flexy-install/"
KUBECONFIG_FILE=""
if [ "${CONTENT_FOR_CONF}" != "" ] ; then
  rm -fr handleconfig.py && eval cp -fr ${WORKDIRBASE}"/private/pipeline/handleconfig.py" .
  value=` python handleconfig.py -a get -y "${CONTENT_FOR_CONF}" -p environments:ocp4:admin_creds_spec || true `
  if [ "${value}" != "None" ] && [ "${value}" != "failtogetvalue" ] && [ "${value}" != "" ]; then
    KUBECONFIG_FILE=${value}
  else
    echo "there is no kubeconfig or wrong in CONF, please check it !!! and try to config it from flexy"
  fi
fi
if [ "${KUBECONFIG_FILE}" != "" ]; then
  echo "the kubeconfig is set directly with CONFIG"
  ck "${KUBECONFIG_FILE}"
else
  echo "the configuration is set from flexy build"
  if [ "${BUILD_NUM_FOR_CONF}" == "" ]; then
    echo "please input FLEXY_BUILD or set kubeconfig in CONF"
    exit 1
  fi
  # configure kubeconfig
  KUBECONFIG_FILE=${FLEXYURLBASE}${BUILD_NUM_FOR_CONF}"/artifact/workdir/install-dir/auth/kubeconfig"
  ck "${KUBECONFIG_FILE}"
  # configure azure authentication script
  # AZURE_AUTH_LOCATION_FILE=${FLEXYURLBASE}${BUILD_NUM_FOR_CONF}"/artifact/workdir/install-dir/terraform.azure.auto.tfvars.json"
  # ret_code=`curl -s -k ${AZURE_AUTH_LOCATION_FILE} -o /dev/null  -w "%{http_code}"`
  # if [ "${ret_code}" == "200" ]; then
  cz "${WORKDIRBASE}"
  # fi
  #config client proxy if necessary
  #export http_proxy= && export https_proxy=
  CLIENT_PROXY_SETTING_SH=${FLEXYURLBASE}${BUILD_NUM_FOR_CONF}"/artifact/workdir/install-dir/client_proxy_setting.sh"
  ret_code=`curl -s -k ${CLIENT_PROXY_SETTING_SH} -o ./client_proxy_setting.sh  -w "%{http_code}"`
  if [ "${ret_code}" == "200" ]; then
    source ./client_proxy_setting.sh
  elif [ "${ret_code}" == "404" ]; then
    CLIENT_PROXY_SETTING_JSON=${FLEXYURLBASE}${BUILD_NUM_FOR_CONF}"/artifact/workdir/install-dir/client_proxy_setting.json"
    ret_code=`curl -s -k ${CLIENT_PROXY_SETTING_JSON} -o ./client_proxy_setting.json  -w "%{http_code}"`
    if [ "${ret_code}" == "200" ]; then
      https_proxy_value=`cat ./client_proxy_setting.json | jq -r .https_proxy`
      if [ "${https_proxy_value}" != "null" ]; then
        export https_proxy=${https_proxy_value}
      fi
      http_proxy_value=`cat ./client_proxy_setting.json | jq -r .http_proxy`
      if [ "${http_proxy_value}" != "null" ]; then
        export http_proxy=${http_proxy_value}
      fi
      echo $https_proxy_value $http_proxy_value
    fi
  fi
fi
eval export GOOGLE_APPLICATION_CREDENTIALS=${WORKDIRBASE}"/private/secrets/gce/aos-qe-sa.json"
env | grep proxy || true

