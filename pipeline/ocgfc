#!/bin/bash
set +x
#get fail case from existing launch for rerun

function get_build_type {

  if [[ "${FILTERSO}" == *"Disruptive"* ]] && [[ "${FILTERSO}" != *"~Disruptive"* ]] && [[ "${FILTERSO}" == *"Basic"* ]]; then
    buildtype="-YDB"
    return
  fi

  if [[ "${FILTERSO}" == *"Disruptive"* ]] && [[ "${FILTERSO}" != *"~Disruptive"* ]] && [[ "${FILTERSO}" == *"Intermediate"* ]]; then
    buildtype="-YDI"
    return
  fi

  if [[ "${FILTERSO}" == *"Disruptive"* ]] && [[ "${FILTERSO}" != *"~Disruptive"* ]]; then
    buildtype="-YDN"
    return
  fi

  if [[ "${FILTERSO}" == *"Basic"* ]]; then
    buildtype="-NDB"
    return
  fi

  if [[ "${FILTERSO}" == *"Intermediate"* ]]; then
    buildtype="-NDI"
    return
  fi

  buildtype="-NDN"

# if [[ "${FILTERSO}" == *"Disruptive"* ]] && [[ "${FILTERSO}" != *"~Disruptive"* ]]; then
#   if [[ "${FILTERSO}" == *"Basic"* ]]; then
#     buildtype="-YDB"
#   elif [[ "${FILTERSO}" == *"Intermediate"* ]]; then
#     buildtype="-YDI"
#   else
#     buildtype="-YDN"
#   fi
# else
#   if [[ "${FILTERSO}" == *"Basic"* ]]; then
#     buildtype="-NDB"
#   elif [[ "${FILTERSO}" == *"Intermediate"* ]]; then
#     buildtype="-NDI"
#   else
#     buildtype="-NDN"
#   fi
# fi

}

WORKBUILDDIR=$1
WORKSPACE=$2
LAUNCHID=$3
ORIGSCENARIO="$4"
BUILDNUM=$5
FILTERSO="$6"

if [ "${FILTERSO}" == "null" ]; then
  FILTERSO=""
else
  FILTERSO=${FILTERSO:4}
fi

get_build_type

cd ${WORKBUILDDIR}
rm -fr reportportal.py && eval cp -fr ${WORKSPACE}"/private/pipeline/reportportal.py" .

rpmmtoken=`cat ${WORKSPACE}"/private/secrets/rp/openshift-qe-reportportal.json" | jq  -r ".ginkgo_rp_mmtoken"`
rppmtoken=`cat ${WORKSPACE}"/private/secrets/rp/openshift-qe-reportportal.json" | jq  -r ".ginkgo_rp_pmtoken"`
ret=`python3 reportportal.py -a getfcd -l "${LAUNCHID}" -ss "${ORIGSCENARIO}"  -bn "${BUILDNUM}""${buildtype}""_${JOB_BASE_NAME}" -t "${rpmmtoken}" -ta "${rppmtoken}" 2>&1 || true`
# echo -e "\\\n"${ret}"\\\n"

result=`echo -e ${ret} | tail -1|xargs`
if [[ "$result" == *"-NOREPLACE" ]]; then
  failcaseid="NOREPLACE"
elif [[ "$result" == *"-NORERUN" ]]; then
  failcaseid="NORERUN"
else
  failcaseid="${result}"
fi
echo -e "Start\\\n"${ret}"\\\nthe last line:\\\n"${failcaseid}

set -x
